@inject Microsoft.Extensions.Localization.IStringLocalizer<Resources> Localizer
@model ApplicationViewModel

@{
    ViewData["Title"] = $"hNext — {Localizer[nameof(Resources.MedicalInformationSystem)]}";
}

<script>
    const START_TAB = '@Model.Tabs.First().Key';
    const START_SIDE_TAB = '@Model.SideBar.First().Key';
</script>

@await Component.InvokeAsync("MainView", new { model = Model })

@foreach (var tab in Model.Tabs)
{
    @await Component.InvokeAsync(tab.Key, new { modules = Model.Modules })
}

@foreach (var sideTab in Model.SideBar)
{
    @await Component.InvokeAsync(sideTab.Key)
}

@foreach (var module in Model.Modules)
{
    @await Component.InvokeAsync(module)
}

<div id="app">
    <main-view></main-view>
</div>


@section Scripts
{
    <script src="~/js/mainView.js" asp-append-version="true"></script>

    @foreach (var module in Model.Modules)
    {
        <script src="@($"/js/{module.ToCamelCase()}.js")" asp-append-version="true"></script>
    }

    @foreach (var tab in Model.Tabs)
    {
        <script src="@($"/js/{tab.Key.ToCamelCase()}.js")" asp-append-version="true"></script>
    }
    @foreach (var sideTab in Model.SideBar)
    {
        <script src="@($"/js/{sideTab.Key.ToCamelCase()}.js")" asp-append-version="true"></script>
    }

    <script>
        new Vue({
            el: '#app'
        });
    </script>
}
